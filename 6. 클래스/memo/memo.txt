#6 클래스
 - 타스에서 클래스 타입 정의하기 

클래스
 - 타입스크립트에서 클래스를 작성할 때는 맴버 변수의 타입은
   미리 정의해야한다. 

 - 맴버 변수의 타입은 생성자 함수 위에 타입을 정의해주면 된다.   

 - 맴버변수의 타입을 미리 정의하지 않는 방법도 있다. 
  → 접근제어자나 유니온 타입을 사용하면 된다. 
  → 생성자 함수의 매개변수 앞에  접근제어자를 추가하면된다. 
    public이나 readonly(읽기전용) 키워드를 붙여주면 된다.
    

접근 제한자(Access modifier) 
 - 타입스크립트는 다른 정적 언어처럼 접근 제한자를 제공한다.
 - 종류: public, private, protected 

public 
 - 접근 제한자를 지정하지 않으면 기본적으로 public 이다.
 - 클래스 어느곳에서든 접근이 가능한 제한자이다. 
 - 즉, 부모/자식 클래스, 인스턴스 모두 접근 가능 

private(또는 #을 붙은 속성) 
 - private는 해당 클래스내에서만 접근할 수 있다. 
   즉, 외부 클래스에서는 private로 정의된 속성에 접근할 수 없다. 
 - #속성의 형태로 사용할 수 있다. 
 - private로 정의된 속성을 외부에서 사용하려면 setter, getter
   함수를 사용한다. 이때 setter, getter 함수는 public으로 
   정의해준다. 
 - 만약 외부 클래스에서는 해당 속성을 접근할 수 없게하고 상속관계에서는
   허용하고싶다면 protected 접근제한자를 사용해야한다. 
  → public으로도 할 수 있지만 외부에서 맘대로 접근할 수 있으므로 
    protected를 사용하는 것이 좋다.   

   
protected
 - protected는 private처럼 외부에서 접근할 수 없는 접근 제한자이다. 
   private와는 달리 protected 상속관계에서는 접근이 가능하다.


클래스에서의 readonly
 - 클래스의 속성을 읽기 전용으로 선언할 수 있다.
 - readonly으로 선언하면 private로 선언한 거처럼 
   속성을 함부로 변경할 수 없다. 
 - 만약 속성의 값을 변경하고 싶다면 constructor 
   내부에서 그 작업을 할 수 있게 해줘야한다.
   즉 속성을 초기화하는 작업을 해주면 된다. 

static 키워드 
 - 인스턴스를 생성하지 않고도 클래스에 정의된 속성을 
   사용할 수 있다.   


추상 클래스
 - 추상 클래스를 선언하려면, 클래스 키워드 앞에 abstract 
   키워드를 붙여준다. 

 - 추상클래스는 new 연산자를 사용해서 인스턴스를 생성할 수 
   없고 상속을 통해서 인스턴스를 생성한다. 

 - 추상클래스는 속성 또는 메서드 이름만 선언할 뿐 구현부가 
   없는 클래스를 말한다.   
   구현부는 상속받은 클래스 내부에서 작성해준다.

 